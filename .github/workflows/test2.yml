name: Botleech-bot Runner

on:
  push:
    branches: [ main ]
    paths-ignore: 'README.md'
  workflow_dispatch:

env:
  GitHubMail: "Raj90398525372@gmail.com"
  GitHubName: "Raj52537"
 # APP_ID : ${{ secrets.API_ID }}
 # API_HASH : ${{ secrets.API_HASH }}
 # TG_BOT_TOKEN : ${{ secrets.TG_TOKEN }} 
 # AUTH_CHANNEL : ${{ secrets.CHAT_ID }} 
 # SUDO_USERS : ${{ secrets.SUDO_USERS }}

jobs:
  ubuntu:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Git Configs & Secrets
        run: |
          git config --global user.email ${GitHubMail}
          git config --global user.name ${GitHubName}
          git config --global color.ui true
          git config --global credential.helper store
          echo "https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
      - uses: rokibhasansagar/slimhub_actions@main
#      - name: initialization
#        continue-on-error: true
  #      run: |
    #      sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
      #    docker rmi `docker images -q`
      #    sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix        
       #   sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* 
     #     sudo -E apt-get clean 
    #      sudo apt install -y expect
     # - name: Clone -bot repo and Generate config
      #  run: |
      #    git clone https://github.com/Raj90398/PublicLeech --depth 1 PublicLeech 
      #    cd PublicLeech
      #    cat << EOF > config.ini
      #    [pyrogram] 
      #    API_ID = ${{ secrets.API_ID }}
      #    API_HASH = ${{ secrets.API_HASH }}
      #    TG_BOT_TOKEN = ${{ secrets.TG_TOKEN }} 
      #    AUTH_CHANNEL = ${{ secrets.CHAT_ID }} 
      #    EOF
        #  cd tobrot
        #  git clone https://github.com/Raj90398/PublicLeech --depth 1 PublicLeech 
      - name: Clone The Secret Mirror Repository
        run: |
          git clone https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com/${{ secrets.SOURCE }} PublicLeech
              # docker build . --rm --force-rm --compress --no-cache=true --pull --file Dockerfile -t botkaca
      - name: Compile The Mirroring Docker Container
        run: |
          cd PublicLeech || exit 1
          echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker container prune --force || true
          docker build . -t public-leech
          docker image ls
      - name: running Docker
        timeout-minutes: 5
        continue-on-error: true
        run: |
          docker run --privileged --rm -i public-leech
      - name: Workflow Looping
        timeout-minutes: 11
        run: |
          git clone https://github.com/${GITHUB_REPOSITORY} loop
          cd loop || exit 1
          echo $(( RANDOM - ( RANDOM % RANDOM ) )) > looper2.txt
          git add looper2.txt
          git commit -m "Looping at $(date -u +%D-%T%P)"
          git push -q https://github.com/${GITHUB_REPOSITORY} HEAD:main
     # - name: running Docker2
     #   timeout-minutes: 11
     #   continue-on-error: true
     #   run: |
     #     docker run --privileged --rm -i public-leech
     
