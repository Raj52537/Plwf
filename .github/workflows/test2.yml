name: Botleech-bot Runner

on:
  push:
    branches: [ main ]
    paths-ignore: 'README.md'
  workflow_dispatch:

env:
  GitHubMail: "Raj90398525372@gmail.com"
  GitHubName: "Raj90398"

jobs:
  ubuntu:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Git Configs & Secrets
        run: |
          git config --global user.email ${GitHubMail}
          git config --global user.name ${GitHubName}
          git config --global color.ui true
          git config --global credential.helper store
          echo "https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
     # - name: Clone -bot repo and Generate config
      #  run: |
      #    git clone https://github.com/Raj90398/PublicLeech --depth 1 PublicLeech 
      #    cd PublicLeech
      #    cat << EOF > config.ini
      #    [pyrogram] 
      #    API_ID = ${{ secrets.API_ID }}
      #    API_HASH = ${{ secrets.API_HASH }}
      #    TG_BOT_TOKEN = ${{ secrets.TG_TOKEN }} 
      #    AUTH_CHANNEL = ${{ secrets.CHAT_ID }} 
      #    EOF
        #  cd tobrot
        #  git clone https://github.com/Raj90398/PublicLeech --depth 1 PublicLeech 
      - name: Clone The Secret Mirror Repository
        run: |
          git clone https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com/${{ secrets.SOURCE }} source
              # docker build . --rm --force-rm --compress --no-cache=true --pull --file Dockerfile -t botkaca
      - name: Compile The Mirroring Docker Container
        run: |
          cd PublicLeech || exit 1
          echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker container prune --force || true
          docker build . -t public-leech
          docker image ls
      - name: running Docker
        timeout-minutes: 330
        continue-on-error: true
        run: |
          docker run --privileged --rm -i public-leech
        env:
         APP_ID : ${{ secrets.API_ID }}
         API_HASH : ${{ secrets.API_HASH }}
         TG_BOT_TOKEN : ${{ secrets.TG_TOKEN }} 
         AUTH_CHANNEL : ${{ secrets.CHAT_ID }} 
      - name: Workflow Looping
        run: |
          git clone https://github.com/${GITHUB_REPOSITORY} loop
          cd loop || exit 1
          echo $(( RANDOM - ( RANDOM % RANDOM ) )) > looper2.txt
          git add looper2.txt
          git commit -m "Looping at $(date -u +%D-%T%P)"
          git push -q https://github.com/${GITHUB_REPOSITORY} HEAD:main
